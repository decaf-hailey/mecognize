//
//  AddInteractor.swift
//  Me-cognize
//
//  Created by Hailey on 2023/09/11.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AddBusinessLogic {
    func getAnalyze(request: Add.Send.Request) async
    func saveLocal(request: Add.Save.Request)
}

protocol AddDataStore {
}

class AddInteractor: AddBusinessLogic, AddDataStore {

    
  var presenter: AddPresentationLogic?
  var worker: AddWorker?
  
  func getAnalyze(request: Add.Send.Request) async {
      
      let result = await NLRequest.analyzeSentiment(document: request.document)
      switch result {
      case .success(let data):
          let response = Add.Send.Response(documentSentiment: data.documentSentiment)
          presenter?.displayAnalyze(response: response)
      case .failure(let error):
          let response = Add.Alert.ViewModel(message: error.localizedDescription)
          presenter?.showAlert(response: response)
      }
  }
    
    func saveLocal(request: Add.Save.Request) {
        do {
            try LocalData.saveHistory(request.history)
            let response = Add.Alert.ViewModel(message: "Saved!")
            presenter?.showAlert(response: response)
        }  catch {
            let response = Add.Alert.ViewModel(message: "Error -------- \n \(request.history.title)")
            presenter?.showAlert(response: response)
        }
    }
    
    
}
