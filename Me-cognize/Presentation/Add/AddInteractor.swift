//
//  AddInteractor.swift
//  Me-cognize
//
//  Created by Hailey on 2023/09/11.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AddBusinessLogic {
    func getAnalyze(request: Add.Send.Request)
    func saveLocal(request: Add.Save.Request)
}

protocol AddDataStore {
}

class AddInteractor: AddBusinessLogic, AddDataStore {

    
  var presenter: AddPresentationLogic?
  var worker: AddWorker?
  
  func getAnalyze(request: Add.Send.Request) {
    worker = AddWorker()
    worker?.doSomeWork()
      NLRequest.analyzeSentiment(document: request.document) { [weak self] response in
          let response = Add.Send.Response(documentSentiment: response.documentSentiment)
          self?.presenter?.displayAnalyze(response: response)
      } failure: { [weak self] error in
          let response = Add.Alert.ViewModel(message: error.localizedDescription)
          self?.presenter?.showAlert(response: response)
      }
  }
    
    func saveLocal(request: Add.Save.Request) {
        LocalData.saveHistory(request.history) { [weak self] in
            let response = Add.Alert.ViewModel(message: "Saved!")
            self?.presenter?.showAlert(response: response)
        } onFail: { [weak self] in
            let response = Add.Alert.ViewModel(message: "Error -------- \n \(request.history.title)")
            self?.presenter?.showAlert(response: response)
        }
    }
    
    
}
